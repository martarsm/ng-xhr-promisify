/*! ng-xhr-promisify v1.0.2 | MIT License | https://github.com/tiago/ng-xhr-promisify */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("angular")):"function"==typeof define&&define.amd?define(["angular"],t):e.ngXhrPromisify=t(e.angular)}(this,function(e){"use strict";function t(e){function t(e){return e.split("\r\n").reduce(function(e,t){var n=t.indexOf(": ");if(n>0){var r=t.substring(0,n).trim().toLowerCase(),s=t.substring(n+2).trim();e[r]=s}return e},Object.create(null))}function n(e){var n=e.getAllResponseHeaders()||"",r=t(n);return function(e){return e?(e=e.toLowerCase(),e in r?r[e]:null):r}}function r(e){return"response"in e?e.response:"string"==typeof e.responseText?e.responseText:null}function s(e,t){var n=r(e),s=/application\/json/i.test(t("Content-Type"));if(s&&"string"==typeof n)try{n=JSON.parse(n)}catch(i){n=null}return n}function i(e){var t=e.status,n=r(e),s=e.getAllResponseHeaders();if(0!==t||n||s||e.statusText||(t=-1),1223===t&&(t=204),0===t){var i="file://"===e.responseURL.slice(0,7);t=n?200:i?404:0}return t}function u(e){var t=n(e),r=s(e,t),u=i(e),o=e.statusText||"";return{headers:t,data:r,status:u,statusText:o}}function o(t){function n(){var e=u(t);e.status>=200&&e.status<300?r.resolve(e):r.reject(e)}if(!(t instanceof XMLHttpRequest))throw new Error("Invalid XMLHttpRequest object");var r=e.defer();return 4===t.readyState||0===t.readyState?n():t.addEventListener("loadend",n),r.promise}return o}e="default"in e?e["default"]:e,t.$inject=["$q"];var n=e.module("ngXhrPromisify",["ng"]).factory("xhrPromisify",t).name;return n});
//# sourceMappingURL=ng-xhr-promisify.min.map
